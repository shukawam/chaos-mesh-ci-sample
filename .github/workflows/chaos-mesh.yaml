name: Chaos Mesh test

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Creating kind cluster
        uses: helm/kind-action@v1.3.0

      - name: Print cluster information
        run: |
          kubectl config view
          kubectl cluster-info
          kubectl get nodes
          kubectl get pods -n kube-system
          helm version
          kubectl version

      - name: Code Checkout 
        uses: actions/checkout@v2
      
      - name: Login to OCIR
        uses: docker/login-action@v1
        with:
          registry: nrt.ocir.io
          username: ${{ secrets.OCIR_USERNAME }}
          password: ${{ secrets.OCIR_PASSWORD }}

      - name: Build application
        run: |
          docker build -t nrt.ocir.io/orasejapan/shukawam/greeting src/greeting 
          docker push nrt.ocir.io/orasejapan/shukawam/greeting

      - name: Deploy an application
        run: |
          kubectl create secret docker-registry ocir-secret \
            --docker-server nrt.ocir.io \
            --docker-username="${{ secrets.OCIR_USERNAME }}" \
            --docker-password="${{ secrets.OCIR_PASSWORD }}"
          kubectl apply -f https://raw.githubusercontent.com/shukawam/chaos-mesh-examples/develop/kubernetes/app/app.yaml

      - name: Prepare K6
        id: expected
        run: |
          kubectl apply -f https://raw.githubusercontent.com/shukawam/chaos-mesh-examples/develop/kubernetes/k6/k6-configmap.yaml
          kubectl port-forward service/greeting 8080:8080

      - name: Run chaos mesh action
        uses: shukawam/chaos-mesh-action@main
        env:
          CFG_FILE: https://raw.githubusercontent.com/shukawam/chaos-mesh-examples/develop/kubernetes/chaos-mesh/pod-kill-workflow.yaml
          CHAOS_MESH_VERSION: v2.2.2

      # - name: Create pull request
      #   uses: actions/github-script@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       github.pulls.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         title: 'Update the Chaos Mesh Examples',
      #         body: 'Update the Chaos Mesh Examples',
      #         head: 'develop',
      #         base: 'main'
      #       })